Introduction 
In this first release of Amazon Web Services (AWS) Drivers, Version 0.8, from 
GroovyClouds, we provide drivers for products SimpleDB (SDB) Version 2007-11-07, 
Simple Storage Service (S3) Version 2006-03-01, and Simple Queue Service (SQS) 
Version 2008-01-01.  All of the drivers support both HTTP and HTTPS for 
requests.  The SDB and SQS drivers use the newer Signature Version 2 and HMAC-
SHA256 for request authentication.  All the drivers support the latest AWS
features.

Using the Drivers 
Each of the drivers is setup using the AWS account access key ID and the secret 
access key.  To setup the driver, you should call the static method 
setupInstance of that driver with the access key ID, secret access key, and 
optionally, the namespace and configuration which returns an instance of the 
driver. You can call getInstance to get an instance of the driver associated 
with the namespace.

AWS Account NameSpace
We have introduced a unique concept of defining a namespace for an AWS account 
for each of the drivers and we expect it to be useful especially during the 
development phase.  We used this concept quite effectively in development mode 
such that for the same AWS account, multiple developers worked in the same 
account using their own namespace without affecting each other's work in the 
account.  When calling setupInstance, a namespace is specified for that pair of 
access key ID, secret access key.  At any time, you can call the getInstance to 
retrieve that instance of the driver associated with the namespace.  The 
useNameSpace configuration determines if a prefix based on the namespace is used 
in the API. By default, useNameSpace is disabled which implies that no prefix is 
used in the API even though instances can be associated with namespace.  As a 
related feature, you can work with multiple accounts with it's own namespace to 
differentiate between the driver instances.    

Example with same account different namespace
John and Jane are developing using the same AWS account identifiers.  John uses 
namespace "john" and enables using namespace, calls setupInstance using 
nameSpace="john".  SDB will add the prefix "john_" to all domain names 
automatically, S3 will add prefix "john" to all bucket names, SQS will add 
prefix "john_" to all queue names. Jane uses namespace "jane" and enables using 
namespace, calls setupInstance using nameSpace="jane". SDB will add the prefix 
"jane_" to all domain names automatically, S3 will add prefix "jane" to all 
bucket names, SQS will add prefix "jane_" to all queue names.

Example with different accounts
Developer creates multiple instances of the drivers using namespace "dev" for 
AWS account used for development, "test" for AWS account used for testing with 
useNameSpace disabled.  Each instance can be obtained specifying the namespace 
to the driver.  Since useNameSpace is disabled, no prefix will be added to the 
domain names, bucket names, queue names of SDB, S3, SQS respectively.

Java code integration
For Java based clients to integrate easily with these drivers, the setupInstance 
parameter for configuration can use the Properties object instead of Groovy-
specific ConfigObject.

Dependencies 
JDK 5.0, Groovy 1.6.0, Commons-codec, Commons-httpclient, Commons-logging, and SLF4J.
We chose SLF4J for logging framework since we did not want to impose 
our choice of logging on the clients of this library and SLF4J provides this 
feature as a simple facade to the client logging solution.  Of course, this 
means that the client of this library will have to include the specific plug-in 
for their choice of logging system at deployment time.  See the SLF4J 
(http://www.slf4j.org/) for more information.

Download Zip File
The downloadable zip file contains the following directories and files:- 
AWSDrivers: Root directory
   Documentation - 
   - docs: Documentation files generated by Groovydoc

   Source Code - 
   - src: AWS Drivers source
   - samples:
   			- aws.properties 
   			(configuration file for the drivers using Groovy, ConfigSlurper, 
   					ConfigObject) 
				- aws_java.properties 
				(Java properties style configuration of the same properties in 
						aws.properties) 
				- src: Sample client code 
			   - lib: Simple Log library for SLF4J

   Ant Build Files -
   - awsdrivers.properties 
   - build.xml
   - Readme.txt

   Build Output - 
   - out/samples:
   		 	- aws.properties 
   		 	(configuration file for the drivers using ConfigSlurper, ConfigObject) 
				- aws_java.properties 
			   (Java properties style configuration of properties in aws.properties) 
				- lib: all the jar files required run the client 
		
	- out/lib: All the jar files required to use the drivers